name: version or publish

on:
  push:
    branches:
      - main

jobs:
  version-or-release:
    runs-on: ubuntu-latest
    outputs:
      willPublish-binary-testbed-caxa: ${{ steps.covector.outputs.willPublish-binary-testbed-caxa }}
      version-binary-testbed-caxa: ${{ steps.covector.outputs.version-binary-testbed-caxa }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required for use of git history
      - name: covector status
        uses: jbolda/covector/packages/action@covector-v0
        id: covector
        with:
          command: "status"
      - name: git config
        if: ${{ steps.covector.outputs.status != 'No changes.' }}
        run: |
          git config --global user.name "${{ github.event.pusher.name }}"
          git config --global user.email "${{ github.event.pusher.email }}"
      - name: covector version
        uses: jbolda/covector/packages/action@covector-v0
        if: ${{ steps.covector.outputs.status != 'No changes.' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: "version"
          createRelease: true
      - name: Create Pull Request With Versions Bumped
        id: cpr
        uses: peter-evans/create-pull-request@v3
        if: ${{ steps.covector.outputs.status != 'No changes.' }}
        with:
          title: "Publish New Versions"
          commit-message: "publish new versions"
          labels: "version updates"
          branch: "release"
          body: ${{ steps.covector.outputs.change }}
      - name: create release
        id: create_release
        run: gh release create ${{ env.VERSION }} --draft -n "${{ env.MESSAGE }}" -t "${{ env.NAME }}"
        if: steps.covector.outputs.willPublish-binary-testbed-caxa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: caxa-v${{ steps.covector.outputs.version-binary-testbed-caxa }}
          MESSAGE: "# Changelog"
          NAME: caxa v${{ steps.covector.outputs.version-binary-testbed-caxa }}

  build-binaries:
    needs: [version-or-release]
    if: needs.version-or-release.outputs.willPublish-binary-testbed-caxa
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        folder: ["caxa"]
        include:
          - os: ubuntu-latest
            platform: linux
            ext: ""
          - os: macos-latest
            platform: macos
            ext: ".tar.gz"
          - os: windows-latest
            platform: windows
            ext: .exe
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: volta-cli/action@v1
      - run: npm ci
        working-directory: ${{ matrix.folder }}
      - run: npm run build
        working-directory: ${{ matrix.folder }}
      - name: tar the binary for upload (on macos)
        if: ${{ matrix.platform == 'macos' }}
        shell: bash
        run: |
          gtar -C ${{ matrix.folder }}/dist -cvzf ${{ matrix.folder }}/dist/file-interactor.tar.gz file-interactor.app
      - name: sign the binary (on macos)
        if: ${{ matrix.platform == 'macos' }}
        run: echo sign!
      - run: gh release upload --clobber ${{ env.VERSION }} ${{ env.FILES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: caxa-v${{ needs.version-or-release.outputs.version-binary-testbed-caxa }}
          FILES: "./${{ matrix.folder }}/dist/file-interactor${{ matrix.ext }}#file-interactor-${{ matrix.platform }}-${{ needs.version-or-release.outputs.version-binary-testbed-caxa }}${{ matrix.ext }}"

  publish:
    needs: [build-binaries]
    runs-on: ubuntu-latest
    timeout-minutes: 65

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required for use of git history
      - name: git config
        run: |
          git config --global user.name "${{ github.event.pusher.name }}"
          git config --global user.email "${{ github.event.pusher.email }}"
      - name: covector publish
        uses: jbolda/covector/packages/action@covector-v0
        id: covector
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: "publish"
          createRelease: true
